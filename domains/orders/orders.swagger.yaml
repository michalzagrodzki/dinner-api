openapi: 3.0.0
components:
  schemas:
    NewOrder:
      type: object
      required:
        - title
        - dinner_id
        - client_name
        - client_
      properties:
        name:
          type: string
          description: The user's name.
          example: John John
    Order:
      allOf:
        - type: object
          properties:
            id:
              type: integer
              description: The order ID.
              example: 0
        - $ref: '#/components/schemas/Order'
tags: [
    {
      name: Order,
      description: API for orders in the system.
    }
  ]
paths:
  /orders:
    get:
      summary: Retrieve a list of Dinners.
      tags:
        - Order
      description: Retrieve a list of dinners from Dinners API.
      responses:
        200:
          description: Ok.
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: array
                    items:
                      $ref: '#/components/schemas/Order'
  
  /orders/details/{orderId}:
    get:
      summary: Retrieve details of selected Dinner.
      tags:
        - Order
      description: Retrieve details of selected dinner from Dinners API.
      parameters:
        - name: orderId
          required: true
          in: path
          schema:
            type: string
            description: Dinner id
            example: "6113f20c348351e616b170c4"
      responses:
        200:
          description: Ok.
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: array
                    items:
                      $ref: '#/components/schemas/Order'